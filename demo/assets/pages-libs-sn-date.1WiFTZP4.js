import{_ as t}from"./sn-topbar.A9l38UY4.js";import{d as e,r as a,b as n,o as l,e as r,f as c,g as o,u as s}from"./index-BV7wVSs2.js";import{$ as y,r as p}from"./uni-app.es.BzKMvEv9.js";import{_ as u}from"./sn-alert.yUyLj5uH.js";import{b as i,_ as m,c as x}from"./sn-button.68-4Ol7n.js";import{_ as d}from"./com-card.YVwaER4k.js";import{_ as f}from"./sn-row.BXkLUWPG.js";import{_ as Y}from"./sn-line.DLI2-M9C.js";import{_ as D}from"./sn-page.Jy_rsgwA.js";const _=x(e({__name:"sn-date",setup(e){y.colors;const x=y.libs.date,_=x.dayuts(),M=a(x.dayuts()),H=x.dayuts("2019-01-25 03:01:52"),g=x.dayuts("2018-06-05 13:51:20"),b=x.dayuts("1999-01-01 03:01:08",null,"zh-cn"),h=x.dayuts("2015-12-06 15:11:20",null,"zh-cn"),j=x.dayuts("2024-12-05 14:02:45",null,"zh-cn");return(e=null,a=null)=>{const y=p(n("sn-topbar"),t),S=p(n("sn-alert"),u),v=p(n("sn-text"),i),w=p(n("com-card"),d),U=p(n("sn-button"),m),C=p(n("sn-row"),f),N=p(n("sn-line"),Y),O=p(n("sn-page"),D);return l(),r(O,null,{default:c((()=>[o(y,{title:"Date 日期库"}),o(S,{type:"primary",text:"此库基于陌上年华的开源 UTS 插件 lime-dayuts 开发，几乎和 Day.js 保持一样的API。"}),o(w,{title:"当前时间",note:"直接调用 dayuts() 将返回一个包含当前日期和时间的 Dayuts 对象。"},{default:c((()=>[o(v,{type:"primary",text:"".concat(s(_))},null,8,["text"])])),_:1}),o(w,{title:"解析字符串",note:"解析传入的符合 UTS Date 格式的字符串并返回一个 Dayuts 对象实例。"},{default:c((()=>[o(v,{type:"primary",text:"字符串：2023/08/13 12:35:54\n解析结果：".concat(s(x).dayuts("2023/08/13 12:35:54"))},null,8,["text"])])),_:1}),o(w,{title:"解析 Unix 时间戳 (毫秒)",note:"解析传入的一个 Unix 时间戳 (13 位数字，从1970年1月1日 UTC 午夜开始所经过的毫秒数) 创建一个 Dayuts 对象。"},{default:c((()=>[o(v,{type:"primary",text:"时间戳：1318781796406\n解析结果：".concat(s(x).dayuts(1318781796406))},null,8,["text"])])),_:1}),o(w,{title:"解析 Date 对象",note:"使用 UTS Date 内置对象创建一个 Dayuts 对象。"},{default:c((()=>[o(v,{type:"primary",text:"对象：new Date(2010,1,5)\n解析结果：".concat(s(x).dayuts(new Date(2010,1,5)))},null,8,["text"])])),_:1}),o(w,{title:"解析数组",note:"您可以传入一个数组来创建一个 Dayuts 对象，数组和结构和 new Date() 十分类似。"},{default:c((()=>[o(v,{type:"primary",text:"数组：[2018,8,6,12,54]\n解析结果：".concat(s(x).dayuts([2018,8,6,12,54]))},null,8,["text"])])),_:1}),o(w,{title:"格式化",note:"根据传入的占位符返回格式化后的日期。\\n将字符放在方括号中，即可原样返回而不被格式化替换 (例如， [MM])"},{default:c((()=>[o(v,{type:"primary",text:"".concat(s(x).dayuts("2019-01-25").format("DD/MM/YYYY"))},null,8,["text"]),o(v,{type:"primary",text:"".concat(s(x).dayuts("2019-01-25").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"])])),_:1}),o(w,{title:"取值/赋值",note:"在设计上 Dayuts 的 getter 和 setter 使用了相同的 API，也就是说，不传参数调用方法即为 getter，调用并传入参数为 setter。"},{default:c((()=>[o(v,{type:"primary",text:"".concat(s(_))},null,8,["text"]),o(v,{type:"primary",text:"年:".concat(s(_).year())},null,8,["text"]),o(v,{type:"primary",text:"月:".concat(s(_).month())},null,8,["text"]),o(v,{type:"primary",text:"日:".concat(s(_).date())},null,8,["text"]),o(v,{type:"primary",text:"周:".concat(s(_).day())},null,8,["text"]),o(v,{type:"primary",text:"时:".concat(s(_).hour())},null,8,["text"]),o(v,{type:"primary",text:"分:".concat(s(_).minute())},null,8,["text"]),o(v,{type:"primary",text:"秒:".concat(s(_).second())},null,8,["text"]),o(v,{type:"primary",text:"毫秒:".concat(s(_).millisecond())},null,8,["text"])])),_:1}),o(w,{title:"操作",note:"提供一系列日期操作方法。支持链式调用。"},{default:c((()=>[o(v,{type:"primary",text:"".concat(s(M).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(C,null,{default:c((()=>[o(U,{class:"spacing",text:"+1时",onClick:a[0]||(a[0]=(t=null)=>M.value=s(M).add(1,"hour"))}),o(U,{class:"spacing",text:"+1天",onClick:a[1]||(a[1]=(t=null)=>M.value=s(M).add(1,"day"))}),o(U,{class:"spacing",text:"+1月",onClick:a[2]||(a[2]=(t=null)=>M.value=s(M).add(1,"month"))}),o(U,{class:"spacing",text:"+1年",onClick:a[3]||(a[3]=(t=null)=>M.value=s(M).add(1,"year"))})])),_:1}),o(C,null,{default:c((()=>[o(U,{class:"spacing",text:"-2时",onClick:a[4]||(a[4]=(t=null)=>M.value=s(M).subtract(2,"hour"))}),o(U,{class:"spacing",text:"-2天",onClick:a[5]||(a[5]=(t=null)=>M.value=s(M).subtract(2,"day"))}),o(U,{class:"spacing",text:"-2月",onClick:a[6]||(a[6]=(t=null)=>M.value=s(M).subtract(2,"month"))}),o(U,{class:"spacing",text:"-2年",onClick:a[7]||(a[7]=(t=null)=>M.value=s(M).subtract(2,"year"))})])),_:1}),o(N),o(v,{type:"primary",text:"转Date：\n".concat(s(M).toDate(),"\n")},null,8,["text"]),o(v,{type:"primary",text:"转Array：\n".concat(s(M).toArray(),"\n")},null,8,["text"]),o(v,{type:"primary",text:"转JSON：\n".concat(s(M).toJSON(),"\n")},null,8,["text"]),o(v,{type:"primary",text:"转Object：\n".concat(UTS.JSON.stringify(s(M).toObject()),"\n")},null,8,["text"]),o(v,{type:"primary",text:"转String：\n".concat(s(M).toString())},null,8,["text"]),o(N),o(v,{type:"primary",text:"本月开始日期：".concat(s(M).startOf("month").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"本年终止日期：".concat(s(M).startOf("year").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(N),o(v,{type:"primary",text:"是否今日：".concat(s(M).isToday())},null,8,["text"]),o(v,{type:"primary",text:"本月天数：".concat(s(M).daysInMonth())},null,8,["text"]),o(v,{type:"primary",text:"今年是否闰年：".concat(s(M).isLeapYear())},null,8,["text"])])),_:1}),o(w,{title:"相对时间",note:"返回日期与现在日期或其他日期的相对时间差异。"},{default:c((()=>[o(v,{type:"primary",text:"实例1：".concat(s(b).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"实例2：".concat(s(h).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"实例1相对于现在：".concat(s(b).fromNow())},null,8,["text"]),o(v,{type:"primary",text:"实例1相对于实例2：".concat(s(b).from(s(h)))},null,8,["text"]),o(v,{type:"primary",text:"现在相对于实例1：".concat(s(b).toNow())},null,8,["text"]),o(v,{type:"primary",text:"实例2相对于实例1：".concat(s(b).to(s(h)))},null,8,["text"])])),_:1}),o(w,{title:"差异",note:"返回指定单位下两个日期时间之间的差异。"},{default:c((()=>[o(v,{type:"primary",text:"日期1：".concat(s(H).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"日期2：".concat(s(g).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"毫秒为单位：".concat(s(H).diff(s(g)))},null,8,["text"]),o(v,{type:"primary",text:"天为单位：".concat(s(H).diff(s(g),"days"))},null,8,["text"]),o(v,{type:"primary",text:"月为单位：".concat(s(H).diff(s(g),"months"))},null,8,["text"])])),_:1}),o(w,{title:"Unix 时间戳 (毫秒)",note:"返回当前实例的 UNIX 时间戳，13位数字，毫秒。"},{default:c((()=>[o(v,{type:"primary",text:"".concat(s(_),"\n").concat(s(_).valueOf())},null,8,["text"])])),_:1}),o(w,{title:"查询",note:"返回当前实例的 UNIX 时间戳，13位数字，毫秒。"},{default:c((()=>[o(v,{type:"primary",text:"实例1：".concat(s(b).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"实例2：".concat(s(j).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),o(v,{type:"primary",text:"实例1是否在现在之前：".concat(s(b).isBefore(s(_)))},null,8,["text"]),o(v,{type:"primary",text:"实例2是否在现在之后：".concat(s(j).isAfter(s(_)))},null,8,["text"]),o(v,{type:"primary",text:"实例2是否在本月：".concat(s(j).isSame(s(_),"month"))},null,8,["text"]),o(v,{type:"primary",text:"实例2是否在今年：".concat(s(j).isSame(s(_),"year"))},null,8,["text"]),o(v,{type:"primary",text:"实例2是否与现在相同或在现在之后：".concat(s(j).isSameOrAfter(s(_)))},null,8,["text"]),o(v,{type:"primary",text:"现在是否在实例1和实例2之间：".concat(s(_).isBetween(s(b),s(j)))},null,8,["text"])])),_:1}),o(w,{title:"国际化",note:"目前内置了中英两种语言"},{default:c((()=>[o(v,{type:"primary",text:"中文\n".concat(s(_),"\n").concat(s(_).locale("zh-cn").toNow(),"\n\n")},null,8,["text"]),o(v,{type:"primary",text:"英文\n".concat(s(_),"\n").concat(s(_).locale("en").toNow())},null,8,["text"])])),_:1})])),_:1})}}}),[["__scopeId","data-v-f3eb7b51"]]);export{_ as default};
