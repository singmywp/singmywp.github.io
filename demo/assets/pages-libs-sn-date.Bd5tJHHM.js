import{_ as t,a as e}from"./sn-topbar.CX0rMkKy.js";import{d as a,r as n,b as l,o as r,e as c,f as o,g as s,u as y}from"./index-DNTc1GxZ.js";import{$ as u,r as p}from"./uni-app.es.D9ZkitmT.js";import{_ as i}from"./sn-alert.BVqfDC3L.js";import{b as m,_ as x,c as d}from"./sn-button.BaZjRh9m.js";import{_ as f}from"./com-card.22LSjaaf.js";import{_ as Y}from"./sn-line.BJRaATTn.js";import{_ as D}from"./sn-page.CEVOSUw5.js";const _=d(a({__name:"sn-date",setup(a){u.colors;const d=u.libs.date,_=d.dayuts(),M=n(d.dayuts()),H=d.dayuts("2019-01-25 03:01:52"),g=d.dayuts("2018-06-05 13:51:20"),b=d.dayuts("1999-01-01 03:01:08",null,"zh-cn"),h=d.dayuts("2015-12-06 15:11:20",null,"zh-cn"),S=d.dayuts("2024-12-05 14:02:45",null,"zh-cn");return(a=null,n=null)=>{const u=p(l("sn-topbar"),t),j=p(l("sn-alert"),i),v=p(l("sn-text"),m),U=p(l("com-card"),f),w=p(l("sn-button"),x),C=p(l("sn-row"),e),N=p(l("sn-line"),Y),O=p(l("sn-page"),D);return r(),c(O,null,{default:o((()=>[s(u,{title:"Date 日期库"}),s(j,{type:"primary",text:"此库基于陌上年华的开源 UTS 插件 lime-dayuts 开发，几乎和 Day.js 保持一样的API。"}),s(U,{title:"当前时间",note:"直接调用 dayuts() 将返回一个包含当前日期和时间的 Dayuts 对象。"},{default:o((()=>[s(v,{type:"primary",text:"".concat(y(_))},null,8,["text"])])),_:1}),s(U,{title:"解析字符串",note:"解析传入的符合 UTS Date 格式的字符串并返回一个 Dayuts 对象实例。"},{default:o((()=>[s(v,{type:"primary",text:"字符串：2023/08/13 12:35:54\n解析结果：".concat(y(d).dayuts("2023/08/13 12:35:54"))},null,8,["text"])])),_:1}),s(U,{title:"解析 Unix 时间戳 (毫秒)",note:"解析传入的一个 Unix 时间戳 (13 位数字，从1970年1月1日 UTC 午夜开始所经过的毫秒数) 创建一个 Dayuts 对象。"},{default:o((()=>[s(v,{type:"primary",text:"时间戳：1318781796406\n解析结果：".concat(y(d).dayuts(1318781796406))},null,8,["text"])])),_:1}),s(U,{title:"解析 Date 对象",note:"使用 UTS Date 内置对象创建一个 Dayuts 对象。"},{default:o((()=>[s(v,{type:"primary",text:"对象：new Date(2010,1,5)\n解析结果：".concat(y(d).dayuts(new Date(2010,1,5)))},null,8,["text"])])),_:1}),s(U,{title:"解析数组",note:"您可以传入一个数组来创建一个 Dayuts 对象，数组和结构和 new Date() 十分类似。"},{default:o((()=>[s(v,{type:"primary",text:"数组：[2018,8,6,12,54]\n解析结果：".concat(y(d).dayuts([2018,8,6,12,54]))},null,8,["text"])])),_:1}),s(U,{title:"格式化",note:"根据传入的占位符返回格式化后的日期。\\n将字符放在方括号中，即可原样返回而不被格式化替换 (例如， [MM])"},{default:o((()=>[s(v,{type:"primary",text:"".concat(y(d).dayuts("2019-01-25").format("DD/MM/YYYY"))},null,8,["text"]),s(v,{type:"primary",text:"".concat(y(d).dayuts("2019-01-25").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"])])),_:1}),s(U,{title:"取值/赋值",note:"在设计上 Dayuts 的 getter 和 setter 使用了相同的 API，也就是说，不传参数调用方法即为 getter，调用并传入参数为 setter。"},{default:o((()=>[s(v,{type:"primary",text:"".concat(y(_))},null,8,["text"]),s(v,{type:"primary",text:"年:".concat(y(_).year())},null,8,["text"]),s(v,{type:"primary",text:"月:".concat(y(_).month())},null,8,["text"]),s(v,{type:"primary",text:"日:".concat(y(_).date())},null,8,["text"]),s(v,{type:"primary",text:"周:".concat(y(_).day())},null,8,["text"]),s(v,{type:"primary",text:"时:".concat(y(_).hour())},null,8,["text"]),s(v,{type:"primary",text:"分:".concat(y(_).minute())},null,8,["text"]),s(v,{type:"primary",text:"秒:".concat(y(_).second())},null,8,["text"]),s(v,{type:"primary",text:"毫秒:".concat(y(_).millisecond())},null,8,["text"])])),_:1}),s(U,{title:"操作",note:"提供一系列日期操作方法。支持链式调用。"},{default:o((()=>[s(v,{type:"primary",text:"".concat(y(M).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(C,null,{default:o((()=>[s(w,{class:"spacing",text:"+1时",onClick:n[0]||(n[0]=(t=null)=>M.value=y(M).add(1,"hour"))}),s(w,{class:"spacing",text:"+1天",onClick:n[1]||(n[1]=(t=null)=>M.value=y(M).add(1,"day"))}),s(w,{class:"spacing",text:"+1月",onClick:n[2]||(n[2]=(t=null)=>M.value=y(M).add(1,"month"))}),s(w,{class:"spacing",text:"+1年",onClick:n[3]||(n[3]=(t=null)=>M.value=y(M).add(1,"year"))})])),_:1}),s(C,null,{default:o((()=>[s(w,{class:"spacing",text:"-2时",onClick:n[4]||(n[4]=(t=null)=>M.value=y(M).subtract(2,"hour"))}),s(w,{class:"spacing",text:"-2天",onClick:n[5]||(n[5]=(t=null)=>M.value=y(M).subtract(2,"day"))}),s(w,{class:"spacing",text:"-2月",onClick:n[6]||(n[6]=(t=null)=>M.value=y(M).subtract(2,"month"))}),s(w,{class:"spacing",text:"-2年",onClick:n[7]||(n[7]=(t=null)=>M.value=y(M).subtract(2,"year"))})])),_:1}),s(N),s(v,{type:"primary",text:"转Date：\n".concat(y(M).toDate(),"\n")},null,8,["text"]),s(v,{type:"primary",text:"转Array：\n".concat(y(M).toArray(),"\n")},null,8,["text"]),s(v,{type:"primary",text:"转JSON：\n".concat(y(M).toJSON(),"\n")},null,8,["text"]),s(v,{type:"primary",text:"转Object：\n".concat(UTS.JSON.stringify(y(M).toObject()),"\n")},null,8,["text"]),s(v,{type:"primary",text:"转String：\n".concat(y(M).toString())},null,8,["text"]),s(N),s(v,{type:"primary",text:"本月开始日期：".concat(y(M).startOf("month").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"本年终止日期：".concat(y(M).startOf("year").format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(N),s(v,{type:"primary",text:"是否今日：".concat(y(M).isToday())},null,8,["text"]),s(v,{type:"primary",text:"本月天数：".concat(y(M).daysInMonth())},null,8,["text"]),s(v,{type:"primary",text:"今年是否闰年：".concat(y(M).isLeapYear())},null,8,["text"])])),_:1}),s(U,{title:"相对时间",note:"返回日期与现在日期或其他日期的相对时间差异。"},{default:o((()=>[s(v,{type:"primary",text:"实例1：".concat(y(b).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"实例2：".concat(y(h).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"实例1相对于现在：".concat(y(b).fromNow())},null,8,["text"]),s(v,{type:"primary",text:"实例1相对于实例2：".concat(y(b).from(y(h)))},null,8,["text"]),s(v,{type:"primary",text:"现在相对于实例1：".concat(y(b).toNow())},null,8,["text"]),s(v,{type:"primary",text:"实例2相对于实例1：".concat(y(b).to(y(h)))},null,8,["text"])])),_:1}),s(U,{title:"差异",note:"返回指定单位下两个日期时间之间的差异。"},{default:o((()=>[s(v,{type:"primary",text:"日期1：".concat(y(H).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"日期2：".concat(y(g).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"毫秒为单位：".concat(y(H).diff(y(g)))},null,8,["text"]),s(v,{type:"primary",text:"天为单位：".concat(y(H).diff(y(g),"days"))},null,8,["text"]),s(v,{type:"primary",text:"月为单位：".concat(y(H).diff(y(g),"months"))},null,8,["text"])])),_:1}),s(U,{title:"Unix 时间戳 (毫秒)",note:"返回当前实例的 UNIX 时间戳，13位数字，毫秒。"},{default:o((()=>[s(v,{type:"primary",text:"".concat(y(_),"\n").concat(y(_).valueOf())},null,8,["text"])])),_:1}),s(U,{title:"查询",note:"返回当前实例的 UNIX 时间戳，13位数字，毫秒。"},{default:o((()=>[s(v,{type:"primary",text:"实例1：".concat(y(b).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"实例2：".concat(y(S).format("YYYY-MM-DD HH:mm:ss"))},null,8,["text"]),s(v,{type:"primary",text:"实例1是否在现在之前：".concat(y(b).isBefore(y(_)))},null,8,["text"]),s(v,{type:"primary",text:"实例2是否在现在之后：".concat(y(S).isAfter(y(_)))},null,8,["text"]),s(v,{type:"primary",text:"实例2是否在本月：".concat(y(S).isSame(y(_),"month"))},null,8,["text"]),s(v,{type:"primary",text:"实例2是否在今年：".concat(y(S).isSame(y(_),"year"))},null,8,["text"]),s(v,{type:"primary",text:"实例2是否与现在相同或在现在之后：".concat(y(S).isSameOrAfter(y(_)))},null,8,["text"]),s(v,{type:"primary",text:"现在是否在实例1和实例2之间：".concat(y(_).isBetween(y(b),y(S)))},null,8,["text"])])),_:1}),s(U,{title:"国际化",note:"目前内置了中英两种语言"},{default:o((()=>[s(v,{type:"primary",text:"中文\n".concat(y(_),"\n").concat(y(_).locale("zh-cn").toNow(),"\n\n")},null,8,["text"]),s(v,{type:"primary",text:"英文\n".concat(y(_),"\n").concat(y(_).locale("en").toNow())},null,8,["text"])])),_:1})])),_:1})}}}),[["__scopeId","data-v-b47b262f"]]);export{_ as default};
