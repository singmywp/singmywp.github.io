import{d as e,$ as t,a as l,b as s,e as n,f as o,g as r,u as a,k as i}from"./index-DYMgrqHp.js";import{_ as m,a as c}from"./sn-topbar.wm0GzhH3.js";import{r as p}from"./uni-app.es.DgDfNdgy.js";import{_ as u}from"./sn-alert.B2UqFsTR.js";import{_ as y}from"./com-card.BtLNzB63.js";import{_ as d}from"./sn-button.BjZePiC5.js";import{_ as k}from"./sn-gap.2Twkbobz.js";import{_ as f}from"./sn-page.Cf6LEMVT.js";import"./sn-text.euomPoe8.js";import"./sn-menu-item.DkjoXkWj.js";import"./sn-overlay.CiZFgEyq.js";import"./sn-loading.t5otRKvs.js";const v=e({__name:"sn-store",setup(e){t.colors;const v=t.store;function _(){i({url:"/pages/libs/sn-store-sub"})}return(e=null,t=null)=>{const i=p(l("sn-topbar"),m),g=p(l("sn-alert"),u),x=p(l("com-card"),y),C=p(l("sn-button"),d),j=p(l("sn-row"),c),b=p(l("sn-gap"),k),$=p(l("sn-page"),f);return s(),n($,null,{default:o((()=>[r(i,{title:"Store 状态管理"}),r(g,{type:"primary",icon:"database-2-fill",text:"一个轻量简洁的全局响应式状态管理库。支持持久化数据储存、过期机制。"}),r(x,{title:"基础用法",note:"全局响应式存储，重启应用自动销毁"},{default:o((()=>{var e;return[r(x,{bgColor:"$info",title:"key1：".concat(null!==(e=a(v).get("key1"))&&void 0!==e?e:"")},null,8,["title"]),r(j,null,{default:o((()=>[r(C,{class:"m-t-10",type:"primary",level:"second",text:"设置",onClick:t[0]||(t[0]=(e=null)=>a(v).set("key1","数据1"))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"删除",onClick:t[1]||(t[1]=(e=null)=>a(v).delete("key1"))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"子页面",onClick:_})])),_:1})]})),_:1}),r(x,{title:"持久化数据",note:"全局响应式存储，同步将数据存储在本地 Storage 中，应用重启后保持原状态"},{default:o((()=>{var e;return[r(x,{bgColor:"$info",title:"key2：".concat(null!==(e=a(v).get("key2"))&&void 0!==e?e:"")},null,8,["title"]),r(j,null,{default:o((()=>[r(C,{class:"m-t-10",type:"primary",level:"second",text:"设置",onClick:t[2]||(t[2]=(e=null)=>a(v).set("key2","数据2",!0))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"删除",onClick:t[3]||(t[3]=(e=null)=>a(v).delete("key2"))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"子页面",onClick:_})])),_:1})]})),_:1}),r(x,{title:"过期机制",note:"采用惰性删除策略，在对数据读写前检查是否过期。一方面避免了定期删除和定时删除对 CPU 资源的过度占用，另一方面，用户端不需要像服务端那样缓存庞大的数据，因此惰性删除导致的内存资源占用也不会过多。"},{default:o((()=>{var e;return[r(x,{bgColor:"$info",title:"key3：".concat(null!==(e=a(v).get("key3"))&&void 0!==e?e:"")},null,8,["title"]),r(j,null,{default:o((()=>[r(C,{class:"m-t-10",type:"primary",level:"second",text:"获取",onClick:t[4]||(t[4]=(e=null)=>a(v).get("key3"))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"设置(3s后点获取)",onClick:t[5]||(t[5]=(e=null)=>a(v).set("key3","数据3",!0,3))}),r(C,{class:"m-t-10 m-l-10",type:"primary",level:"second",text:"删除",onClick:t[6]||(t[6]=(e=null)=>a(v).delete("key3"))})])),_:1})]})),_:1}),r(b)])),_:1})}}});export{v as default};
