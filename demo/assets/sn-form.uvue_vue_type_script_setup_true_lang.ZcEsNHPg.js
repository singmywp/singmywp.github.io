import{d as e,$ as l,r as t,c as a,D as s,w as o,b as u,e as n,q as r,y as i,ac as c,j as d,o as f,B as p}from"./index-DoInGK9X.js";const m=e(Object.assign({name:"sn-form"},{__name:"sn-form",props:{modelValue:{type:Object,default:{}},type:{type:String,default:"embed"},showError:{type:Boolean,default:!0},labelColor:{type:String,default:""},labelSize:{type:String,default:""},labelWidth:{type:String,default:"auto"},showBorder:{type:Boolean,default:!0},triggerChange:{type:Boolean,default:!1},customStyle:{type:Object,default:new UTSJSONObject(new UTSJSONObject({}))}},emits:["update:modelValue","submited","change"],setup(e,m){var b=m.expose,y=m.emit;l.utils;const h=l.colors,g=y,S=e,w=t([]),O=t([]),j=a((()=>["embed","float"].includes(S.type)?S.type:"embed")),v=a((()=>i("color",S.labelColor,h.value.textLight))),B=a((()=>i("font",S.labelSize,l.configs.font.size(3)))),C=a((()=>S.showBorder)),V=a((()=>S.showError));function x(e){let l=!0,t=[];w.value.forEach((e=>{let a=e.field,s=new UTSJSONObject(S.modelValue)[a];if(null!=s){null!=UTS.arrayFind(w.value,(e=>e.field==a))&&e.instance.$callMethod("verify",s,(e=>{e.valid||(l=!1,t.push(e))}))}else l=!1})),l?null!=e.success&&e.success():null!=e.fail&&e.fail(t)}return s("type",j),s("labelColor",v),s("labelSize",B),s("showBorder",C),s("showError",V),b({submit:function(e){x(new c({success:()=>{null!=e.success&&(g("submited"),e.success())},fail:l=>{null!=e.fail&&e.fail(l)}}))},register:function(e){w.value.push(e),O.value.push(e.instance)}}),o((()=>S.modelValue),(e=>{g("update:modelValue",e),g("change",e),S.triggerChange&&x(new c({}))})),(l=null,t=null)=>{const a=d;return f(),u(a,{class:"sn-form",style:r([e.customStyle])},{default:n((()=>[p(l.$slots,"default")])),_:3},8,["style"])}}}));export{m as _};
