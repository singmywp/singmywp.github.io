import{_ as d,D as e,c as o,I as a,a5 as n,o as r}from"./chunks/framework.BhjPWYS5.js";const f=JSON.parse('{"title":"Button  按钮","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-button.md","filePath":"components/sn-button.md"}'),s={name:"components/sn-button.md"},i=n(`<h1 id="button-按钮" tabindex="-1">Button 按钮 <a class="header-anchor" href="#button-按钮" aria-label="Permalink to &quot;Button  按钮&quot;">​</a></h1><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><ul><li>分为两个组件：<code>sn-button-group</code> 和 <code>sn-button</code> 。</li><li><code>sn-button</code> 可以独立使用，如果需要显示多个并列按钮（合并样式），请使用 <code>sn-button-group</code> 作为父级</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;按钮&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>更多演示请下载 demo 查看</strong></p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p><strong>sn-button</strong></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>text</td><td>按钮文本内容</td><td>String</td><td>-</td><td>-</td></tr><tr><td>disabled</td><td>是否禁用</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>loading</td><td>是否加载状态</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>long</td><td>是否长按钮</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>dashed</td><td>是否镂空且显示虚线边框</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>round</td><td>是否显示为圆形（为 <code>true</code> 时 <code>borderRadius</code> 强制设为 <code>50%</code>）</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>roundSize</td><td>圆形按钮（<code>round=true</code>）的直径</td><td>String</td><td><code>45px</code></td><td>-</td></tr><tr><td>borderRadius</td><td>按钮圆角大小</td><td>String</td><td><code>$normal</code></td><td>-</td></tr><tr><td>padding</td><td>按钮内边距</td><td>String</td><td><code>12px</code></td><td></td></tr><tr><td>type</td><td>按钮主题样式类型</td><td>String</td><td><code>info</code></td><td><code>info</code> | <code>primary</code> | <code>success</code> | <code>error</code> | <code>warning</code></td></tr><tr><td>level</td><td>按钮等级</td><td>String</td><td><code>first</code></td><td><code>first</code> | <code>second</code> | <code>third</code> | <code>least</code></td></tr><tr><td>align</td><td>按钮文本对齐方向</td><td>String</td><td><code>center</code></td><td>-</td></tr><tr><td>textColor</td><td>按钮文本颜色</td><td>String</td><td>-</td><td>-</td></tr><tr><td>disabledTextColor</td><td>禁用状态下按钮文本颜色</td><td>String</td><td>-</td><td>-</td></tr><tr><td>bgColor</td><td>按钮背景颜色</td><td>String</td><td>-</td><td>-</td></tr><tr><td>activeBgColor</td><td>按钮按下时背景颜色</td><td>String</td><td>-</td><td>-</td></tr><tr><td>disabledBgColor</td><td>禁用状态下按钮颜色</td><td>String</td><td>-</td><td>-</td></tr><tr><td>textSize</td><td>按钮文本大小</td><td>String</td><td>-</td><td>-</td></tr><tr><td>textFont</td><td>按钮文本字体</td><td>String</td><td>-</td><td>-</td></tr><tr><td>customStyle</td><td>自定义按钮样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr><tr><td>customTextStyle</td><td>自定义按钮文本样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr></tbody></table><p><strong>sn-button-group</strong></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>vertical</td><td>是否纵向排列</td><td>Boolean</td><td><code>false</code></td><td><code>true</code></td></tr><tr><td>merge</td><td>是否合并按钮（强制设置 <code>spacing</code> 为 <code>0</code>）</td><td>Boolean</td><td><code>false</code></td><td><code>true</code></td></tr><tr><td>justify</td><td>主轴子元素排列方式（flex布局中的justify-content）</td><td>String</td><td><code>flex-start</code></td><td><code>center</code></td></tr><tr><td>align</td><td>侧轴子元素排列方式（flex布局中的align-items）</td><td>String</td><td><code>flex-start</code></td><td><code>center</code></td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><p><strong>sn-button</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">click</td><td style="text-align:left;"><code>(e: UniPointerEvent) =&gt; void</code></td><td style="text-align:left;">点击按钮时触发</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><p><strong>sn-button</strong></p><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>替换按钮内部原有的 <code>text</code> ，可以是任意组件</td></tr></tbody></table><p><strong>sn-button-group</strong></p><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>在这里放置子组件 <code>sn-button</code></td></tr></tbody></table>`,18);function c(l,h,p,g,u,b){const t=e("DemoPhone");return r(),o("div",null,[i,a(t,{name:"sn-button"})])}const E=d(s,[["render",c]]);export{f as __pageData,E as default};
