import{_ as t,c as s,o as i,a5 as e}from"./chunks/framework.BhjPWYS5.js";const c=JSON.parse('{"title":"Gesture 手势","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-e-gesture.md","filePath":"components/sn-e-gesture.md"}'),a={name:"components/sn-e-gesture.md"},n=e(`<h1 id="gesture-手势" tabindex="-1">Gesture 手势 <a class="header-anchor" href="#gesture-手势" aria-label="Permalink to &quot;Gesture 手势&quot;">​</a></h1><ul><li><p><code>sn-e-gesture</code> 是 SinleUI 框架的手势库核心组件。</p></li><li><p>主要集成了一些原生手势事件（非 uni 内置事件），以便开发使用。</p></li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-e-gesture</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureScaleEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGesturePointerEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">longpress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbclick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGesturePointerEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touchstart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touchmove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touchend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touchcancel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">down</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGesturePointerEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showpress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureTouchEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nativeGestureFlingEvent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-e-gesture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><p>由于不同插件之间的类型冲突，<code>sn-e-gesture</code> 的事件均返回为 UTSJSONObject 对象，但其数据结构与对应的类型相同，将其作为 UTSJSONObject 对象使用即可。见下。</p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">click</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">点击事件（<code>event</code> 结构同 <a href="/api/types/api#snpointerevent">SnPointerEvent</a> ）</td></tr><tr><td style="text-align:left;">longpress</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">长按事件（<code>event</code> 结构同 <a href="/api/types/api#sntouchevent">SnTouchEvent</a> ）</td></tr><tr><td style="text-align:left;">dbclick</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">双击事件（<code>event</code> 结构同 <a href="/api/types/api#snpointerevent">SnPointerEvent</a> ）</td></tr><tr><td style="text-align:left;">touchstart</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">手指落下事件（<code>event</code> 结构同 <a href="/api/types/api#sntouchevent">SnTouchEvent</a> ）</td></tr><tr><td style="text-align:left;">touchmove</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">手指移动事件（<code>event</code> 结构同 <a href="/api/types/api#sntouchevent">SnTouchEvent</a> ）</td></tr><tr><td style="text-align:left;">touchend</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">手指抬起事件（<code>event</code> 结构同 <a href="/api/types/api#sntouchevent">SnTouchEvent</a> ）</td></tr><tr><td style="text-align:left;">touchcancel</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">触摸打断事件（<code>event</code> 结构同 <a href="/api/types/api#sntouchevent">SnTouchEvent</a> ）</td></tr><tr><td style="text-align:left;">down</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">按下事件（<code>event</code> 结构同 <a href="/api/types/api#snpointerevent">SnPointerEvent</a> ）</td></tr><tr><td style="text-align:left;">fling</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">滑动事件（<code>event</code> 结构同 <a href="/api/types/api#snflingevent">SnFlingEvent</a> ）</td></tr><tr><td style="text-align:left;">scale</td><td style="text-align:left;">(event: UTSJSONObject) =&gt; void</td><td style="text-align:left;">双指缩放事件（<code>event</code> 结构同 <a href="/api/types/api#snscaleevent">SnScaleEvent</a> ）</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">注意</p><p>由于此组件监听原生事件，所以事件返回值都没有 <code>event</code> 属性，因此不支持阻止默认事件、阻止冒泡。</p><p>如需实现此效果，可包裹一层 <code>view</code>，在这个 <code>view</code> 上阻止默认事件、冒泡。</p></div><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>放置子组件</td></tr></tbody></table>`,9),l=[n];function h(p,k,E,d,r,g){return i(),s("div",null,l)}const y=t(a,[["render",h]]);export{c as __pageData,y as default};
