import{_ as e,D as d,c as o,I as l,a5 as r,o as a}from"./chunks/framework.BhjPWYS5.js";const E=JSON.parse('{"title":"LongList 长列表","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-longlist.md","filePath":"components/sn-longlist.md"}'),n={name:"components/sn-longlist.md"},c=r(`<h1 id="longlist-长列表" tabindex="-1">LongList 长列表 <a class="header-anchor" href="#longlist-长列表" aria-label="Permalink to &quot;LongList 长列表&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>一次性初始化太多列表项，因为创建大量 vnode 耗时，会导致列表初始化变慢。此时推荐使用官方的扩展组件 uni-recycle-view 来解决初始化慢的问题，该组件内部会分批创建节点，自动实现节点复用。</p></div><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><ul><li>用于显示大量同类信息。</li><li>Longlist 本身只是容器，不预设任何样式。在 Android 端基于 recycle-view，性能优秀（设置固定的高度才支持高性能滚动）。</li><li>子组件为 <code>list-item</code>。</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-longlist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-longlist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>associativeContainer</td><td>关联的滚动容器。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>String</td><td>-</td><td>-</td></tr><tr><td>bounces</td><td>是否启用回弹效果。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>upperThreshold</td><td>距顶部/左边多远时（单位px），触发 scrolltoupper 事件。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Number</td><td><code>50</code></td><td>-</td></tr><tr><td>lowerThreshold</td><td>距底部/右边多远时（单位px），触发 scrolltolower 事件。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Number</td><td><code>50</code></td><td>-</td></tr><tr><td>scrollTop</td><td>设置竖向滚动条位置。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Number</td><td><code>0</code></td><td>-</td></tr><tr><td>showScrollbar</td><td>是否显示滚动条。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>scrollIntoView</td><td>值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素起始位置。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>String</td><td>-</td><td>-</td></tr><tr><td>scrollWithAnimation</td><td>是否在设置滚动条位置时使用滚动动画，设置 <code>false</code>没有滚动动画。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>refresherEnabled</td><td>开启下拉刷新，暂时不支持 <code>scroll-x = true</code> 横向刷新。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>refresherThreshold</td><td>设置下拉刷新阈值, 仅 <code>refresher-default-style = &#39;none&#39;</code> 自定义样式下生效。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Number</td><td><code>45</code></td><td>-</td></tr><tr><td>refresherMaxDragDistance</td><td>设置下拉最大拖拽距离（单位px）。</td><td>Number</td><td><code>100</code></td><td>-</td></tr><tr><td>refresherBackground</td><td>设置下拉刷新区域背景颜色，默认透明。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>String</td><td><code>transparent</code></td><td>-</td></tr><tr><td>refresherTriggered</td><td>设置当前下拉刷新状态，<code>true</code> 表示下拉刷新已经被触发，<code>false</code> 表示下拉刷新未被触发。同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>false</code></td><td>-</td></tr><tr><td>backtop</td><td>是否显示回到顶部的按钮</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>loadmore</td><td>是否显示加载更多的组件</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>refresherDefaultStyle</td><td>设置下拉刷新默认样式，<code>none</code> 表示不使用默认样式；App 端固定为 <code>none</code></td><td>String</td><td><code>white</code></td><td><code>white</code> | <code>black</code> | <code>none</code></td></tr><tr><td>loadmoreStatus</td><td>加载更多组件的状态</td><td>String</td><td><code>loadmore</code></td><td><code>loading</code> | <code>nomore</code> | <code>loadmore</code></td></tr><tr><td>loadmoreConfig</td><td>加载更多组件的配置</td><td><a href="/api/types/components#snloadmoreparams">SnLoadmoreParams</a></td><td><code>{}</code></td><td>-</td></tr><tr><td>refresherConfig</td><td>下拉刷新组件的配置</td><td><a href="/api/types/components#snrefresherparams">SnRefresherParams</a></td><td><code>{}</code></td><td>-</td></tr><tr><td>customNestedScroll</td><td>子元素是否开启嵌套滚动 将滚动事件与父元素协商处理同 <a href="https://doc.dcloud.net.cn/uni-app-x/component/list-view.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer"><code>list-view</code></a>。</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>customStyle</td><td>自定义滚动列表样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>用于放置子组件 <code>list-item</code></td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">loadmore</td><td style="text-align:left;"><code>() =&gt; void</code></td><td style="text-align:left;">加载更多时触发</td></tr><tr><td style="text-align:left;">scrolltoupper</td><td style="text-align:left;"><code>(e: UniScrollToUpperEvent) =&gt; void</code></td><td style="text-align:left;">滚动到顶部时触发</td></tr><tr><td style="text-align:left;">scrolltolower</td><td style="text-align:left;"><code>(e: UniScrollToLowerEvent) =&gt; void</code></td><td style="text-align:left;">滚动到底部时触发</td></tr><tr><td style="text-align:left;">scroll</td><td style="text-align:left;"><code>(e: UniScrollEvent) =&gt; void</code></td><td style="text-align:left;">滚动时触发</td></tr><tr><td style="text-align:left;">scrollend</td><td style="text-align:left;"><code>(e: UniScrollEvent) =&gt; void</code></td><td style="text-align:left;">滚动结束时触发</td></tr></tbody></table>`,11);function s(i,h,p,f,g,u){const t=d("DemoPhone");return a(),o("div",null,[c,l(t,{name:"sn-longlist"})])}const k=e(n,[["render",s]]);export{E as __pageData,k as default};
