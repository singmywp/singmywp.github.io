import{_ as e,D as d,c as a,I as s,a5 as i,o as l}from"./chunks/framework.BhjPWYS5.js";const m=JSON.parse('{"title":"Page 页面","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-page.md","filePath":"components/sn-page.md"}'),o={name:"components/sn-page.md"},n=i(`<h1 id="page-页面" tabindex="-1">Page 页面 <a class="header-anchor" href="#page-页面" aria-label="Permalink to &quot;Page 页面&quot;">​</a></h1><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><ul><li>页面容器，是页面的根节点。使用页面容器可帮助您快速布局页面，无需手动管理滚动相关组件及事件。</li><li>支持动态修改页面背景色、全局背景色。</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-page</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bgColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#f0f0f0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>更多演示请下载 demo 查看</strong></p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>scrollOn</td><td>是否开启滚动功能</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>scrollTop</td><td>设置竖向滚动条位置</td><td>Number</td><td><code>0</code></td><td>-</td></tr><tr><td>scrollWithAnimation</td><td>滚动是否使用动画</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>direction</td><td>滚动方向（vertical 或 horizontal）</td><td>String</td><td><code>vertical</code></td><td><code>vertical</code> | <code>horizontal</code></td></tr><tr><td>bgColor</td><td>页面背景颜色</td><td>String</td><td><code>$page</code></td><td>-</td></tr><tr><td>padding</td><td>页面内边距</td><td>String</td><td><code>0 15px</code></td><td>-</td></tr><tr><td>bounces</td><td>是否启用回弹效果</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>customStyle</td><td>自定义页面样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">参数</th><th style="text-align:left;">返回值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">scrollTo</td><td style="text-align:left;"><code>(x: number, y: number)</code></td><td style="text-align:left;">-</td><td style="text-align:left;">滚动页面到指定位置</td></tr></tbody></table>`,9);function r(h,c,p,g,k,E){const t=d("DemoPhone");return l(),a("div",null,[n,s(t,{name:"sn-page"})])}const b=e(o,[["render",r]]);export{m as __pageData,b as default};
