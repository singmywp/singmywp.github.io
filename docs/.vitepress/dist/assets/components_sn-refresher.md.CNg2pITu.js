import{_ as e,D as d,c as s,I as a,a5 as r,o as i}from"./chunks/framework.BhjPWYS5.js";const u=JSON.parse('{"title":"Refresher 下拉刷新","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-refresher.md","filePath":"components/sn-refresher.md"}'),h={name:"components/sn-refresher.md"},n=r(`<h1 id="refresher-下拉刷新" tabindex="-1">Refresher 下拉刷新 <a class="header-anchor" href="#refresher-下拉刷新" aria-label="Permalink to &quot;Refresher 下拉刷新&quot;">​</a></h1><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><ul><li>自定义 <code>scroll-view</code> 和 <code>list-view</code> 下拉刷新样式</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-refresher</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refresh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-refresher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>更多演示请下载 demo 查看</strong></p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>status</td><td>当前状态（刷新或刷新中）</td><td>String</td><td><code>refresh</code></td><td><code>refresh</code> | <code>refreshing</code></td></tr><tr><td>icon</td><td>刷新图标名称</td><td>String</td><td><code>refresh-line</code></td><td>-</td></tr><tr><td>refreshText</td><td>未刷新状态下的文本提示</td><td>String</td><td><code>松开刷新</code></td><td>-</td></tr><tr><td>refreshingText</td><td>正在刷新状态下的文本提示</td><td>String</td><td><code>刷新中</code></td><td>-</td></tr><tr><td>textSize</td><td>文本大小</td><td>String</td><td><code>$2+1</code></td><td>-</td></tr><tr><td>iconSize</td><td>图标大小</td><td>String</td><td><code>$2+1</code></td><td>-</td></tr><tr><td>iconColor</td><td>图标颜色</td><td>String</td><td><code>$lineText</code></td><td>-</td></tr><tr><td>textColor</td><td>文本颜色</td><td>String</td><td><code>$lineText</code></td><td>-</td></tr><tr><td>customStyle</td><td>自定义样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>refresh</td><td><code>()=&gt;void</code></td><td><code>status</code> 切换为 <code>refresh</code> 时触发</td></tr></tbody></table>`,9);function o(l,c,p,k,E,g){const t=d("DemoPhone");return i(),s("div",null,[n,a(t,{name:"sn-refresher"})])}const m=e(h,[["render",o]]);export{u as __pageData,m as default};
