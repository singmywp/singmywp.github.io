import{_ as e,D as d,c as a,I as s,a5 as i,o as r}from"./chunks/framework.BhjPWYS5.js";const u=JSON.parse('{"title":"Timer 计时器","description":"","frontmatter":{},"headers":[],"relativePath":"components/sn-timer.md","filePath":"components/sn-timer.md"}'),h={name:"components/sn-timer.md"},n=i(`<h1 id="timer-计时器" tabindex="-1">Timer 计时器 <a class="header-anchor" href="#timer-计时器" aria-label="Permalink to &quot;Timer 计时器&quot;">​</a></h1><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><ul><li>顾名思义，就是一个计时器。</li><li>推荐使用插槽布局为主，样式更好调。</li><li>可设置自动计时和毫秒级精度，支持 API 控制计时。</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sn-timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>更多演示请下载demo查看</strong></p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>format</td><td>时间格式（参考 <a href="https://dayjs.fenxianglu.cn/category/parse.html#%E5%AD%97%E7%AC%A6%E4%B8%B2-%E6%A0%BC%E5%BC%8F" target="_blank" rel="noreferrer"><code>Day.js</code></a>）</td><td>String</td><td><code>HH:mm:ss</code></td><td>-</td></tr><tr><td>autoplay</td><td>自动开始计时</td><td>Boolean</td><td><code>true</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>millisecond</td><td>毫秒级精度（如果要显示毫秒请务必开启）</td><td>Boolean</td><td><code>false</code></td><td><code>true</code> | <code>false</code></td></tr><tr><td>textSize</td><td>倒计时文本字体大小</td><td>String</td><td><code>$2</code></td><td>-</td></tr><tr><td>textColor</td><td>倒计时文本颜色</td><td>String</td><td><code>$text</code></td><td>-</td></tr><tr><td>customStyle</td><td>自定义倒计时样式</td><td>UTSJSONObject</td><td><code>{}</code></td><td>-</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>替换倒计时内部原有的文本，可以是任意组件</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>change</td><td>(value: <a href="/api/types/components#sntimertime">SnTimerTime</a>) =&gt; void</td><td>时间变化时触发</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>参数</th><th>返回值</th><th>描述</th></tr></thead><tbody><tr><td>start</td><td>-</td><td>-</td><td>开始计时</td></tr><tr><td>pause</td><td>-</td><td>-</td><td>暂停计时</td></tr><tr><td>reset</td><td>-</td><td>-</td><td>重置计时器（进度归零）</td></tr></tbody></table>`,13);function o(l,c,p,m,k,b){const t=d("DemoPhone");return r(),a("div",null,[n,s(t,{name:"sn-timer"})])}const g=e(h,[["render",o]]);export{u as __pageData,g as default};
