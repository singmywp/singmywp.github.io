import{_ as i,c as a,o as s,a5 as t}from"./chunks/framework.BhjPWYS5.js";const b=JSON.parse('{"title":"colorLib.tinyColor()","description":"","frontmatter":{},"headers":[],"relativePath":"libs/color/methods.md","filePath":"libs/color/methods.md"}'),h={name:"libs/color/methods.md"},l=t(`<h1 id="colorlib-tinycolor" tabindex="-1">colorLib.tinyColor() <a class="header-anchor" href="#colorlib-tinycolor" aria-label="Permalink to &quot;colorLib.tinyColor()&quot;">​</a></h1><h3 id="创建tinycolor实例" tabindex="-1">创建TinyColor实例 <a class="header-anchor" href="#创建tinycolor实例" aria-label="Permalink to &quot;创建TinyColor实例&quot;">​</a></h3><p>本函数的字符串解析非常宽容，目的是使输入颜色尽可能简单。所有的逗号、百分比、括号都是可选的，大多数输入允许使用 0-1、0%-100% 或 0-n（其中 n 取决于值的 100、255 或 360）。 HSL 和 HSV 都需要 0%-100% 或 0-1 作为 S/L/V 属性。H（色相）可以在 0%-100% 或 0-360 之间取值。 RGB 输入需要 0-255 或 0%-100%。</p><p>同时也支持传入 UTSJSONObject、<code>RGB</code>、<code>RGBA</code>、<code>HSL</code>、<code>HSLA</code>、<code>HSV</code>、<code>HSVA</code>、<code>HSB</code>、<code>HSBA</code> 等多种类型。</p><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>color</td><td>Any</td><td>否</td><td><code>&#39;&#39;</code></td><td>输入颜色</td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>TinyColor</td><td>是</td><td>TinyColor实例</td></tr></tbody></table><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="hex-8-digit-rgba-hex" tabindex="-1">Hex, 8-digit (RGBA) Hex <a class="header-anchor" href="#hex-8-digit-rgba-hex" aria-label="Permalink to &quot;Hex, 8-digit (RGBA) Hex&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#369C&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;369C&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#f0f0f6&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f0f0f6&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#f0f0f688&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f0f0f688&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="rgb-rgba" tabindex="-1">RGB, RGBA <a class="header-anchor" href="#rgb-rgba" aria-label="Permalink to &quot;RGB, RGBA&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgb (255, 0, 0)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgb 255 0 0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgba (255, 0, 0, .5)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h4 id="hsl-hsla" tabindex="-1">HSL, HSLA <a class="header-anchor" href="#hsl-hsla" aria-label="Permalink to &quot;HSL, HSLA&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsl(0, 100%, 50%)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsla(0, 100%, 50%, .5)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsl(0, 100%, 50%)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsl 0 1.0 0.5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ h: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, l: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h4 id="hsv-hsva" tabindex="-1">HSV, HSVA <a class="header-anchor" href="#hsv-hsva" aria-label="Permalink to &quot;HSV, HSVA&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsv(0, 100%, 100%)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsva(0, 100%, 100%, .5)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsv (0 100% 100%)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hsv 0 1 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ h: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h4 id="named" tabindex="-1">Named <a class="header-anchor" href="#named" aria-label="Permalink to &quot;Named&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RED&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;blanchedalmond&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;darkblue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">colorLib.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinyColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0xaabbcc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><br><br><br><br><br></p><hr><h1 id="colorlib-calcapca" tabindex="-1">colorLib.calcAPCA() <a class="header-anchor" href="#colorlib-calcapca" aria-label="Permalink to &quot;colorLib.calcAPCA()&quot;">​</a></h1><h3 id="计算apca" tabindex="-1"><strong>计算APCA</strong> <a class="header-anchor" href="#计算apca" aria-label="Permalink to &quot;**计算APCA**&quot;">​</a></h3><p>计算指定文本色与背景色的感知亮度对比数值（<code>Lc</code>），范围为 <code>-108 ~ +106</code>，浅色背景深色文字为正数、深色背景浅色文字为负数，背景与文字颜色互换后返回的是原数值的相反数。数值绝对值越大，对比越强。</p><blockquote><p><strong>可访问的感知对比度算法</strong>（Accessible Perceptual Contrast Algorithm，简称 APCA），基于字形属性、文本与背景的感知亮度差异、环境与上下文等特征进行对比度计算，目标是更接近人眼的实际感受。</p></blockquote><p>APCA 是 WCAG 3.0 无障碍标准候选方法之一。由于 WCAG 2.0 对暗黑背景的支持较差，故选用了APCA 作为计算文字-背景颜色对比度的方法。</p><p>因该项目处于实验阶段，未来可能会进行一定调整。</p><p>参考： <a href="https://link.zhihu.com/?target=https%3A//github.com/Myndex/SAPC-APCA" target="_blank" rel="noreferrer">GitHub - Myndex/SAPC-APCA</a>、<a href="https://zhuanlan.zhihu.com/p/555769196" target="_blank" rel="noreferrer">不要依赖 WCAG 2 的对比度计算，试试 APCA</a>。</p><h3 id="兼容性-1" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-1" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>frontColor</td><td>Any</td><td>是</td><td>-</td><td>前景色。</td></tr><tr><td>bgColor</td><td>Any</td><td>是</td><td>-</td><td>背景颜色。</td></tr><tr><td>round</td><td>Boolean</td><td>否</td><td><code>true</code></td><td>是否对结果进行四舍五入。</td></tr></tbody></table><h3 id="返回值-1" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-1" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>Number</td><td>是</td><td>返回APCA值。</td></tr></tbody></table><hr><h1 id="colorlib-generate" tabindex="-1">colorLib.generate() <a class="header-anchor" href="#colorlib-generate" aria-label="Permalink to &quot;colorLib.generate()&quot;">​</a></h1><h3 id="生成色板" tabindex="-1"><strong>生成色板</strong> <a class="header-anchor" href="#生成色板" aria-label="Permalink to &quot;**生成色板**&quot;">​</a></h3><p>引用 Ant Design 色板生成工具，仅通过提供一个主题色，快速生成1-10共10个系列颜色。支持暗色模式。</p><h3 id="兼容性-2" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-2" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>color</td><td>Any</td><td>是</td><td>-</td><td>输入的颜色值，可以是十六进制、RGB、RGBA、HSL、HSLA或颜色名称。</td></tr><tr><td>opts</td><td><code>LGenerateOptions</code></td><td>否</td><td><code>{}</code></td><td>可选的生成选项，用于指定生成色彩模式的行为，例如主题。</td></tr></tbody></table><h3 id="返回值-2" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-2" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td><code>string[]</code></td><td>是</td><td>返回一个包含生成的颜色模式的字符串数组。</td></tr></tbody></table><hr><h1 id="colorlib-mean" tabindex="-1">colorLib.mean() <a class="header-anchor" href="#colorlib-mean" aria-label="Permalink to &quot;colorLib.mean()&quot;">​</a></h1><h3 id="计算平均颜色" tabindex="-1"><strong>计算平均颜色</strong> <a class="header-anchor" href="#计算平均颜色" aria-label="Permalink to &quot;**计算平均颜色**&quot;">​</a></h3><p>获取平均颜色。即返回若干个颜色的平均值。</p><h3 id="兼容性-3" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-3" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-3" tabindex="-1">属性 <a class="header-anchor" href="#属性-3" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>colors</td><td><code>any[]</code></td><td>是</td><td>-</td><td>颜色值数组。</td></tr></tbody></table><h3 id="返回值-3" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-3" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>TinyColor</td><td>是</td><td>返回平均颜色。</td></tr></tbody></table><hr><h1 id="colorlib-random" tabindex="-1">colorLib.random() <a class="header-anchor" href="#colorlib-random" aria-label="Permalink to &quot;colorLib.random()&quot;">​</a></h1><h3 id="生成随机颜色" tabindex="-1"><strong>生成随机颜色</strong> <a class="header-anchor" href="#生成随机颜色" aria-label="Permalink to &quot;**生成随机颜色**&quot;">​</a></h3><p>生成一个随机的颜色。</p><h3 id="兼容性-4" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-4" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-4" tabindex="-1">属性 <a class="header-anchor" href="#属性-4" aria-label="Permalink to &quot;属性&quot;">​</a></h3><p>无</p><h3 id="返回值-4" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-4" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>TinyColor</td><td>是</td><td>返回一个随机颜色。</td></tr></tbody></table>`,68),e=[l];function n(r,d,k,o,p,E){return s(),a("div",null,e)}const y=i(h,[["render",n]]);export{b as __pageData,y as default};
