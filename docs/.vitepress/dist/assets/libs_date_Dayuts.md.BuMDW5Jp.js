import{_ as t,c as e,o as l,a5 as d}from"./chunks/framework.BhjPWYS5.js";const c=JSON.parse('{"title":"Dayuts","description":"","frontmatter":{},"headers":[],"relativePath":"libs/date/Dayuts.md","filePath":"libs/date/Dayuts.md"}'),a={name:"libs/date/Dayuts.md"},n=d('<h1 id="dayuts" tabindex="-1">Dayuts <a class="header-anchor" href="#dayuts" aria-label="Permalink to &quot;Dayuts&quot;">​</a></h1><div class="info custom-block github-alert"><p class="custom-block-title">提示</p><p></p><p>本库基于 <a href="https://dayjs.fenxianglu.cn/category/" target="_blank" rel="noreferrer">Day.js</a> 设计，可参考 <a href="https://dayjs.fenxianglu.cn/category/" target="_blank" rel="noreferrer">Day.js</a> 文档。二者如有冲突，以本文档为准。</p></div><h3 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h3><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p></p><p>构造颜色对象请不要直接 <code>new Dayuts()</code>，而是通过 <code>dateLib.dayuts()</code> 函数创建。</p></div><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">必备</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">cfg</td><td style="text-align:left;">LDayutsConfig</td><td style="text-align:left;">是</td><td style="text-align:left;">-</td><td style="text-align:left;">处理后的输入日期配置</td></tr></tbody></table><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">参数</th><th style="text-align:left;">返回值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">isValid</td><td style="text-align:left;">-</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">检查日期对象是否有效。</td></tr><tr><td style="text-align:left;">isSame</td><td style="text-align:left;"><code>(input: string|number|Date|Dayuts, units?: string = null)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">检查当前日期是否与给定的日期在指定的时间单位内相同。</td></tr><tr><td style="text-align:left;">isAfter</td><td style="text-align:left;"><code>(input: string|number|Date|Dayuts, units?: string = null)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">检查给定的日期或时间是否在当前 <code>Dayuts</code> 对象的指定时间单位之后。</td></tr><tr><td style="text-align:left;">isBefore</td><td style="text-align:left;"><code>(input: string|number|Date|Dayuts, units?: string = null)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">检查给定的日期或时间是否在当前 <code>Dayuts</code> 对象的指定时间单位之前。</td></tr><tr><td style="text-align:left;">isSameOrBefore</td><td style="text-align:left;"><code>(input: string|number|Date|Dayuts, units?: string = null)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">根据指定的时间单位，判断当前 <code>Dayuts</code> 对象是否与给定的输入在同一时间或之前。</td></tr><tr><td style="text-align:left;">isSameOrAfter</td><td style="text-align:left;"><code>(input: string|number|Date|Dayuts, units?: string = null)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">根据指定的时间单位，判断当前 <code>Dayuts</code> 对象是否与给定的输入在同一时间或之后。</td></tr><tr><td style="text-align:left;">isBetween</td><td style="text-align:left;"><code>(input: any, input2: any, units: LDayutsUnit = &#39;millisecond&#39;, interval : string = &#39;()&#39;)</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">根据指定的时间单位，判断当前 <code>Dayuts</code> 对象是否在给定的两个时间之间。</td></tr><tr><td style="text-align:left;">isLeapYear</td><td style="text-align:left;">-</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">判断当前Dayuts对象所在的年份是否为闰年</td></tr><tr><td style="text-align:left;">isToday</td><td style="text-align:left;">-</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">判断当前Dayuts对象所在日期是否是今天</td></tr><tr><td style="text-align:left;">unix</td><td style="text-align:left;">-</td><td style="text-align:left;">Number</td><td style="text-align:left;">获取当前 <code>Dayuts</code> 对象的 Unix 时间戳（以秒为单位）。</td></tr><tr><td style="text-align:left;">startOf</td><td style="text-align:left;"><code>(units : LDayutsUnit, startOf : boolean = true)</code></td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">将当前 <code>Dayuts</code> 对象设置到一个时间的开始。</td></tr><tr><td style="text-align:left;">endOf</td><td style="text-align:left;"><code>(units : LDayutsUnit, startOf : boolean = true)</code></td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">将当前 <code>Dayuts</code> 对象设置到一个时间的结束。</td></tr><tr><td style="text-align:left;">set</td><td style="text-align:left;"><code>(string : LDayutsUnit, int : number)</code></td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">创建一个当前对象的副本，并设置指定的时间单位的值。</td></tr><tr><td style="text-align:left;">get</td><td style="text-align:left;"><code>(units : LDayutsUnit)</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">获取当前 <code>Dayuts</code> 对象的指定时间单位的值。</td></tr><tr><td style="text-align:left;">year</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置年份。传入参数则设置为指定年份并返回当前对象，不传入参数则返回年份。</td></tr><tr><td style="text-align:left;">month</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置月份。传入参数则设置为指定月份并返回当前对象，不传入参数则返回月份。</td></tr><tr><td style="text-align:left;">day</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置星期几。传入参数则设置为指定星期几并返回当前对象，不传入参数则返回星期几。</td></tr><tr><td style="text-align:left;">date</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置月份中的某一天。传入参数则设置为指定月份中的某一天并返回当前对象，不传入参数则返回月份中的某一天。</td></tr><tr><td style="text-align:left;">hour</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置小时。传入参数则设置为指定小时并返回当前对象，不传入参数则返回小时。</td></tr><tr><td style="text-align:left;">minute</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置分钟。传入参数则设置为指定分钟并返回当前对象，不传入参数则返回分钟。</td></tr><tr><td style="text-align:left;">second</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置秒。传入参数则设置为指定秒并返回当前对象，不传入参数则返回秒。</td></tr><tr><td style="text-align:left;">millisecond</td><td style="text-align:left;"><code>(input ?: number = null)</code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">获取或设置毫秒。传入参数则设置为指定毫秒并返回当前对象，不传入参数则返回毫秒。</td></tr><tr><td style="text-align:left;">add</td><td style="text-align:left;"><code>(number : number, units : LDayutsUnit)</code></td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">在当前 <code>Dayuts</code> 实例上添加指定的时间长度。</td></tr><tr><td style="text-align:left;">subtract</td><td style="text-align:left;"><code>(number : number, units : LDayutsUnit)</code></td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">在当前 <code>Dayuts</code> 实例上减去指定的时间长度。</td></tr><tr><td style="text-align:left;">format</td><td style="text-align:left;"><code>(formatStr ?: string = null) </code></td><td style="text-align:left;">String</td><td style="text-align:left;">根据给定格式（包含格式占位符），返回格式化后的日期文本</td></tr><tr><td style="text-align:left;">utcOffset</td><td style="text-align:left;">-</td><td style="text-align:left;">Number</td><td style="text-align:left;">获取 <code>Dayuts</code> 实例的 UTC 偏移量（以分钟为单位）。</td></tr><tr><td style="text-align:left;">diff</td><td style="text-align:left;"><code>(input : string|number|Date|Dayuts, units : LDayutsUnit = &#39;millisecond&#39;, float : boolean = false)</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">计算两个日期之间的差值。<code>float=true</code> 时返回浮点数结果。</td></tr><tr><td style="text-align:left;">toDate</td><td style="text-align:left;">-</td><td style="text-align:left;">Date</td><td style="text-align:left;">将当前 Dayuts 对象转换为原生 Date 对象。</td></tr><tr><td style="text-align:left;">toJSON</td><td style="text-align:left;">-</td><td style="text-align:left;">String | null</td><td style="text-align:left;">如果 <code>Dayuts</code> 对象有效，则返回 ISO 8601 格式的字符串，否则返回 <code>null</code></td></tr><tr><td style="text-align:left;">toISOString</td><td style="text-align:left;">-</td><td style="text-align:left;">String</td><td style="text-align:left;">返回 ISO 8601 格式的字符串</td></tr><tr><td style="text-align:left;">toObject</td><td style="text-align:left;">-</td><td style="text-align:left;">String</td><td style="text-align:left;">返回 LDayutsObject 类型的对象</td></tr><tr><td style="text-align:left;">toArray</td><td style="text-align:left;">-</td><td style="text-align:left;">Array&lt;Number&gt;</td><td style="text-align:left;">返回包含当前时间信息的数组</td></tr><tr><td style="text-align:left;">valueOf</td><td style="text-align:left;">-</td><td style="text-align:left;">Number</td><td style="text-align:left;">获取当前日期的毫秒数</td></tr><tr><td style="text-align:left;">daysInMonth</td><td style="text-align:left;">-</td><td style="text-align:left;">Number</td><td style="text-align:left;">获取当前 <code>Dayuts</code> 对象所在月份的天数。</td></tr><tr><td style="text-align:left;">locale</td><td style="text-align:left;"><code>(preset ?: string = null)</code></td><td style="text-align:left;">String | Dayuts</td><td style="text-align:left;">设置或获取 <code>Dayuts</code> 实例的本地化配置。如果传入参数，则返回国际化后的 <code>Dayuts</code> 实例，否则返回当前实例的语言名称</td></tr><tr><td style="text-align:left;">clone</td><td style="text-align:left;">-</td><td style="text-align:left;">Dayuts</td><td style="text-align:left;">返回复制后的 <code>Dayuts</code> 对象</td></tr><tr><td style="text-align:left;">toString</td><td style="text-align:left;">-</td><td style="text-align:left;">String</td><td style="text-align:left;">返回字符串</td></tr><tr><td style="text-align:left;">dayOfYear</td><td style="text-align:left;"><code>(input ?: number = null) </code></td><td style="text-align:left;">Number | Dayuts</td><td style="text-align:left;">计算给定日期在当年的第几天，或者设置给定日期为当年的第几天。如果提供了输入值，则返回调整后的日期。如果没有提供输入值，则返回当前日期在当年的第几天。</td></tr><tr><td style="text-align:left;">fromToBase</td><td style="text-align:left;"><code>(input : string|number|Date|Dayuts, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean)</code></td><td style="text-align:left;">String</td><td style="text-align:left;">根据输入的时间计算与当前时间的相对时间差，并以指定的格式返回。</td></tr><tr><td style="text-align:left;">to</td><td style="text-align:left;"><code>(input : string|number|Date|Dayuts, withoutSuffix : boolean = false)</code></td><td style="text-align:left;">String</td><td style="text-align:left;">返回当前实例到 X 的相对时间</td></tr><tr><td style="text-align:left;">from</td><td style="text-align:left;"><code>(input : string|number|Date|Dayuts, withoutSuffix : boolean = false)</code></td><td style="text-align:left;">String</td><td style="text-align:left;">返回 X 到当前实例的相对时间。</td></tr><tr><td style="text-align:left;">toNow</td><td style="text-align:left;"><code>(withoutSuffix : boolean = false)</code></td><td style="text-align:left;">String</td><td style="text-align:left;">返回当前实例到现在的相对时间。</td></tr><tr><td style="text-align:left;">fromNow</td><td style="text-align:left;"><code>(withoutSuffix : boolean = false)</code></td><td style="text-align:left;">String</td><td style="text-align:left;">返回现在到当前实例的相对时间。</td></tr></tbody></table>',7),s=[n];function i(y,r,f,g,o,x){return l(),e("div",null,s)}const D=t(a,[["render",i]]);export{c as __pageData,D as default};
