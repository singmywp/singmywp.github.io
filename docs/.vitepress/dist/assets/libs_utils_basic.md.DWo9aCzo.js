import{_ as t,c as a,o as d,a5 as e}from"./chunks/framework.BhjPWYS5.js";const q=JSON.parse('{"title":"snu.randomComId()","description":"","frontmatter":{},"headers":[],"relativePath":"libs/utils/basic.md","filePath":"libs/utils/basic.md"}'),r={name:"libs/utils/basic.md"},h=e('<h1 id="snu-randomcomid" tabindex="-1">snu.randomComId() <a class="header-anchor" href="#snu-randomcomid" aria-label="Permalink to &quot;snu.randomComId()&quot;">​</a></h1><h3 id="生成随机组件id" tabindex="-1"><strong>生成随机组件ID</strong> <a class="header-anchor" href="#生成随机组件id" aria-label="Permalink to &quot;**生成随机组件ID**&quot;">​</a></h3><p>生成一个指定长度的随机字符串，用于唯一标识生成，防止多个组件出现数据错乱。</p><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><p>无</p><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回生成的随机ID。</td></tr></tbody></table><hr><h1 id="snu-throttle" tabindex="-1">snu.throttle() <a class="header-anchor" href="#snu-throttle" aria-label="Permalink to &quot;snu.throttle()&quot;">​</a></h1><h3 id="节流" tabindex="-1"><strong>节流</strong> <a class="header-anchor" href="#节流" aria-label="Permalink to &quot;**节流**&quot;">​</a></h3><p>创建一个节流函数，指定的时间内多次执行，只执行第一次调用。</p><h3 id="兼容性-1" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-1" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>fun</td><td><code>() =&gt; void</code></td><td>是</td><td>-</td><td>需要节流的函数</td></tr><tr><td>wait</td><td>Number</td><td>是</td><td>-</td><td>需要等待的时间（毫秒）</td></tr><tr><td>id</td><td>String</td><td>否</td><td><code>&#39;default&#39;</code></td><td>节流函数的唯一标识符，防止多组件共享状态混乱</td></tr></tbody></table><h3 id="返回值-1" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-1" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>无</p><hr><h1 id="snu-debounce" tabindex="-1">snu.debounce() <a class="header-anchor" href="#snu-debounce" aria-label="Permalink to &quot;snu.debounce()&quot;">​</a></h1><h3 id="防抖" tabindex="-1"><strong>防抖</strong> <a class="header-anchor" href="#防抖" aria-label="Permalink to &quot;**防抖**&quot;">​</a></h3><p>创建一个防抖函数，指定的时间运行多次，将重新计时，并只执行最后一次调用。</p><h3 id="兼容性-2" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-2" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>fun</td><td><code>() =&gt; void</code></td><td>是</td><td>-</td><td>需要防抖的函数</td></tr><tr><td>wait</td><td>Number</td><td>是</td><td>-</td><td>需要等待的时间（毫秒）</td></tr><tr><td>id</td><td>String</td><td>否</td><td><code>&#39;default&#39;</code></td><td>防抖函数的唯一标识符，防止多组件共享状态混乱</td></tr></tbody></table><h3 id="返回值-2" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-2" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>无</p>',29),o=[h];function i(n,l,s,b,c,u){return d(),a("div",null,o)}const f=t(r,[["render",i]]);export{q as __pageData,f as default};
