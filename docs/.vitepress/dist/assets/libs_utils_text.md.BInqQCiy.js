import{_ as t,c as a,o as e,a5 as d}from"./chunks/framework.BhjPWYS5.js";const m=JSON.parse('{"title":"snu.isEmpty()","description":"","frontmatter":{},"headers":[],"relativePath":"libs/utils/text.md","filePath":"libs/utils/text.md"}'),h={name:"libs/utils/text.md"},r=d('<h1 id="snu-isempty" tabindex="-1">snu.isEmpty() <a class="header-anchor" href="#snu-isempty" aria-label="Permalink to &quot;snu.isEmpty()&quot;">​</a></h1><h3 id="是否为空文本" tabindex="-1"><strong>是否为空文本</strong> <a class="header-anchor" href="#是否为空文本" aria-label="Permalink to &quot;**是否为空文本**&quot;">​</a></h3><p>判断字符串是否为空（自动去除空格）。</p><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>str</td><td>String</td><td>是</td><td>-</td><td>检测的字符串</td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>Boolean</td><td>是</td><td>如果是空文本，返回 <code>true</code></td></tr></tbody></table><hr><h1 id="snu-len" tabindex="-1">snu.len() <a class="header-anchor" href="#snu-len" aria-label="Permalink to &quot;snu.len()&quot;">​</a></h1><h3 id="计算文本字数" tabindex="-1"><strong>计算文本字数</strong> <a class="header-anchor" href="#计算文本字数" aria-label="Permalink to &quot;**计算文本字数**&quot;">​</a></h3><p>计算文本字数。使用 <code>emoji-regex</code> 库，能够正确计算表情符号的数量。</p><p>参考文档：<a href="https://juejin.cn/post/7018880163257712677" target="_blank" rel="noreferrer">https://juejin.cn/post/7018880163257712677</a></p><p><code>Android</code> 端和 <code>Web</code> 端统计字数有差异。对于含有复杂 emoji 的文本， <code>Android</code> 统计的字数可能会较 <code>Web</code> 统计的更多。主要是因为 <code>Android</code> 不支持 <code>emoji-regex</code> 正则表达式，因此只能使用 <code>Unicode Property</code> 匹配方案。</p><h3 id="兼容性-1" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-1" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>str</td><td>String</td><td>是</td><td>-</td><td>待计算字数的文本</td></tr></tbody></table><h3 id="返回值-1" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-1" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>Number</td><td>是</td><td>返回文本的字数。</td></tr></tbody></table><hr><h1 id="snu-kebabcasetocamelcase" tabindex="-1">snu.kebabCaseToCamelCase() <a class="header-anchor" href="#snu-kebabcasetocamelcase" aria-label="Permalink to &quot;snu.kebabCaseToCamelCase()&quot;">​</a></h1><h3 id="kebab命名法转小驼峰命名法" tabindex="-1"><strong>Kebab命名法转小驼峰命名法</strong> <a class="header-anchor" href="#kebab命名法转小驼峰命名法" aria-label="Permalink to &quot;**Kebab命名法转小驼峰命名法**&quot;">​</a></h3><p>将Kebab命名法的文本转为小驼峰命名法。</p><h3 id="兼容性-2" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-2" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>str</td><td>String</td><td>是</td><td>-</td><td>待转换的字符串</td></tr></tbody></table><h3 id="返回值-2" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-2" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回转换后的小驼峰命名法文本</td></tr></tbody></table><hr><h1 id="snu-camelcasetokebabcase" tabindex="-1">snu.camelCaseToKebabCase() <a class="header-anchor" href="#snu-camelcasetokebabcase" aria-label="Permalink to &quot;snu.camelCaseToKebabCase()&quot;">​</a></h1><h3 id="小驼峰命名法转kebab命名法" tabindex="-1"><strong>小驼峰命名法转Kebab命名法</strong> <a class="header-anchor" href="#小驼峰命名法转kebab命名法" aria-label="Permalink to &quot;**小驼峰命名法转Kebab命名法**&quot;">​</a></h3><p>将小驼峰命名法的文本转为Kebab命名法。</p><h3 id="兼容性-3" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-3" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-3" tabindex="-1">属性 <a class="header-anchor" href="#属性-3" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>str</td><td>String</td><td>是</td><td>-</td><td>待转换的字符串</td></tr></tbody></table><h3 id="返回值-3" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-3" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回转换后的Kebab命名法文本</td></tr></tbody></table><hr><h1 id="snu-numtoupper" tabindex="-1">snu.numToUpper() <a class="header-anchor" href="#snu-numtoupper" aria-label="Permalink to &quot;snu.numToUpper()&quot;">​</a></h1><h3 id="数字转大写金额" tabindex="-1"><strong>数字转大写金额</strong> <a class="header-anchor" href="#数字转大写金额" aria-label="Permalink to &quot;**数字转大写金额**&quot;">​</a></h3><p>将阿拉伯数字转换为中文大写金额。</p><h3 id="兼容性-4" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-4" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-4" tabindex="-1">属性 <a class="header-anchor" href="#属性-4" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>num</td><td>String</td><td>是</td><td>-</td><td>待转换的数字</td></tr></tbody></table><h3 id="返回值-4" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-4" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回中文大写金额的字符串。</td></tr></tbody></table><hr><h1 id="snu-encryptname" tabindex="-1">snu.encryptName() <a class="header-anchor" href="#snu-encryptname" aria-label="Permalink to &quot;snu.encryptName()&quot;">​</a></h1><h3 id="姓名脱敏" tabindex="-1"><strong>姓名脱敏</strong> <a class="header-anchor" href="#姓名脱敏" aria-label="Permalink to &quot;**姓名脱敏**&quot;">​</a></h3><p>为姓名脱敏。</p><h3 id="兼容性-5" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-5" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-5" tabindex="-1">属性 <a class="header-anchor" href="#属性-5" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>-</td><td>待脱敏的名字</td></tr></tbody></table><h3 id="返回值-5" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-5" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回脱敏后的名字。</td></tr></tbody></table><hr><h1 id="snu-encryptphone" tabindex="-1">snu.encryptPhone() <a class="header-anchor" href="#snu-encryptphone" aria-label="Permalink to &quot;snu.encryptPhone()&quot;">​</a></h1><h3 id="电话号码脱敏" tabindex="-1"><strong>电话号码脱敏</strong> <a class="header-anchor" href="#电话号码脱敏" aria-label="Permalink to &quot;**电话号码脱敏**&quot;">​</a></h3><p>为电话号码脱敏。支持 11 位手机号码和座机号码。</p><h3 id="兼容性-6" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-6" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-6" tabindex="-1">属性 <a class="header-anchor" href="#属性-6" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>phone</td><td>String</td><td>是</td><td>-</td><td>待脱敏的电话号码</td></tr></tbody></table><h3 id="返回值-6" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-6" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回脱敏后的电话号码。</td></tr></tbody></table><hr><h1 id="snu-encryptidcard" tabindex="-1">snu.encryptIDCard() <a class="header-anchor" href="#snu-encryptidcard" aria-label="Permalink to &quot;snu.encryptIDCard()&quot;">​</a></h1><h3 id="身份证号脱敏" tabindex="-1"><strong>身份证号脱敏</strong> <a class="header-anchor" href="#身份证号脱敏" aria-label="Permalink to &quot;**身份证号脱敏**&quot;">​</a></h3><p>为身份证号脱敏。隐藏中间的11位数字，只保留前3位和后4位。</p><h3 id="兼容性-7" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-7" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-7" tabindex="-1">属性 <a class="header-anchor" href="#属性-7" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>no</td><td>String</td><td>是</td><td>-</td><td>待脱敏的身份证号码</td></tr></tbody></table><h3 id="返回值-7" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-7" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回脱敏后的身份证号码。</td></tr></tbody></table><hr><h1 id="snu-encryptemail" tabindex="-1">snu.encryptEmail() <a class="header-anchor" href="#snu-encryptemail" aria-label="Permalink to &quot;snu.encryptEmail()&quot;">​</a></h1><h3 id="邮箱脱敏" tabindex="-1"><strong>邮箱脱敏</strong> <a class="header-anchor" href="#邮箱脱敏" aria-label="Permalink to &quot;**邮箱脱敏**&quot;">​</a></h3><p>为邮箱脱敏。隐藏用户名的一部分。</p><h3 id="兼容性-8" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-8" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-8" tabindex="-1">属性 <a class="header-anchor" href="#属性-8" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>email</td><td>String</td><td>是</td><td>-</td><td>待脱敏的电子邮件地址</td></tr></tbody></table><h3 id="返回值-8" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-8" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回脱敏后的电子邮件地址。</td></tr></tbody></table><hr><h1 id="snu-encryptbankcard" tabindex="-1">snu.encryptBankCard() <a class="header-anchor" href="#snu-encryptbankcard" aria-label="Permalink to &quot;snu.encryptBankCard()&quot;">​</a></h1><h3 id="银行卡号脱敏" tabindex="-1"><strong>银行卡号脱敏</strong> <a class="header-anchor" href="#银行卡号脱敏" aria-label="Permalink to &quot;**银行卡号脱敏**&quot;">​</a></h3><p>为银行卡号脱敏，隐藏中间的部分数字，只保留前3位和后4位。</p><h3 id="兼容性-9" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-9" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-9" tabindex="-1">属性 <a class="header-anchor" href="#属性-9" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>no</td><td>String</td><td>是</td><td>-</td><td>待脱敏的银行卡号</td></tr></tbody></table><h3 id="返回值-9" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-9" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回脱敏后的银行卡号。</td></tr></tbody></table><hr><h1 id="snu-separatenumber" tabindex="-1">snu.separateNumber() <a class="header-anchor" href="#snu-separatenumber" aria-label="Permalink to &quot;snu.separateNumber()&quot;">​</a></h1><h3 id="分割数字" tabindex="-1"><strong>分割数字</strong> <a class="header-anchor" href="#分割数字" aria-label="Permalink to &quot;**分割数字**&quot;">​</a></h3><p>将数字字符串格式化为带有指定分隔符的格式，例如每三位数字后加一个逗号。</p><h3 id="兼容性-10" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-10" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-10" tabindex="-1">属性 <a class="header-anchor" href="#属性-10" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>num</td><td>String</td><td>是</td><td>-</td><td>输入的数字字符串。</td></tr><tr><td>digits</td><td>Number</td><td>否</td><td><code>3</code></td><td>数字分隔的位数，默认为3。</td></tr><tr><td>separator</td><td>String</td><td>否</td><td><code>&#39;,&#39;</code></td><td>数字分隔符，默认为逗号。</td></tr></tbody></table><h3 id="返回值-10" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-10" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回格式化后的数字字符串。</td></tr></tbody></table>',111),o=[r];function n(b,i,l,s,c,u){return e(),a("div",null,o)}const x=t(h,[["render",n]]);export{m as __pageData,x as default};
