import{_ as t,c as a,o as d,a5 as e}from"./chunks/framework.BhjPWYS5.js";const q=JSON.parse('{"title":"snu.getPx()","description":"","frontmatter":{},"headers":[],"relativePath":"libs/utils/ui.md","filePath":"libs/utils/ui.md"}'),h={name:"libs/utils/ui.md"},r=e('<h1 id="snu-getpx" tabindex="-1">snu.getPx() <a class="header-anchor" href="#snu-getpx" aria-label="Permalink to &quot;snu.getPx()&quot;">​</a></h1><h3 id="获取像素值" tabindex="-1"><strong>获取像素值</strong> <a class="header-anchor" href="#获取像素值" aria-label="Permalink to &quot;**获取像素值**&quot;">​</a></h3><p>将长度字符串中的单位转换为以像素（px）为单位的值。仅支持 <code>px</code> | <code>rpx</code>。不支持百分比。</p><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>String</td><td>是</td><td>-</td><td>待转换的字符串</td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>Number</td><td>是</td><td>返回转换后的像素值。</td></tr></tbody></table><hr><h1 id="snu-addpx" tabindex="-1">snu.addPx() <a class="header-anchor" href="#snu-addpx" aria-label="Permalink to &quot;snu.addPx()&quot;">​</a></h1><h3 id="添加像素单位" tabindex="-1"><strong>添加像素单位</strong> <a class="header-anchor" href="#添加像素单位" aria-label="Permalink to &quot;**添加像素单位**&quot;">​</a></h3><p>将数字值转换为带有 <code>&#39;px&#39;</code> 单位的字符串。</p><h3 id="兼容性-1" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-1" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>Number</td><td>是</td><td>-</td><td>需要转换的数字值</td></tr></tbody></table><h3 id="返回值-1" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-1" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回带有 <code>&#39;px&#39;</code> 单位的字符串。</td></tr></tbody></table><hr><h1 id="snu-addunit" tabindex="-1">snu.addUnit() <a class="header-anchor" href="#snu-addunit" aria-label="Permalink to &quot;snu.addUnit()&quot;">​</a></h1><h3 id="添加单位" tabindex="-1"><strong>添加单位</strong> <a class="header-anchor" href="#添加单位" aria-label="Permalink to &quot;**添加单位**&quot;">​</a></h3><p>将一个长度值添加单位。纯数字将默认视为原数据以px为单位。百分比数据不做处理，返回原值。</p><h3 id="兼容性-2" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-2" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>Any</td><td>是</td><td>-</td><td>待添加单位的值。</td></tr><tr><td>unit</td><td>String</td><td>否</td><td><code>&#39;px&#39;</code></td><td>单位字符串，默认值为 px。</td></tr></tbody></table><h3 id="返回值-2" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-2" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>是</td><td>返回添加单位后的字符串。</td></tr></tbody></table><hr><h1 id="snu-getinnerradius" tabindex="-1">snu.getInnerRadius() <a class="header-anchor" href="#snu-getinnerradius" aria-label="Permalink to &quot;snu.getInnerRadius()&quot;">​</a></h1><h3 id="获取内圆角半径" tabindex="-1"><strong>获取内圆角半径</strong> <a class="header-anchor" href="#获取内圆角半径" aria-label="Permalink to &quot;**获取内圆角半径**&quot;">​</a></h3><p>根据父组件（矩形）宽度、父组件圆角半径、子组件（矩形）宽度计算子组件的圆角半径。</p><h3 id="兼容性-3" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-3" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-3" tabindex="-1">属性 <a class="header-anchor" href="#属性-3" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>outwidth</td><td>Number</td><td>是</td><td>-</td><td>父组件（矩形）宽度</td></tr><tr><td>outradius</td><td>Number</td><td>是</td><td>-</td><td>父组件圆角半径</td></tr><tr><td>innerwidth</td><td>Number</td><td>是</td><td>-</td><td>子组件（矩形）宽度</td></tr></tbody></table><h3 id="返回值-3" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-3" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td>Number</td><td>是</td><td>返回子组件圆角半径。</td></tr></tbody></table><hr><h1 id="snu-findparent" tabindex="-1">snu.findParent() <a class="header-anchor" href="#snu-findparent" aria-label="Permalink to &quot;snu.findParent()&quot;">​</a></h1><h3 id="查找父系组件" tabindex="-1"><strong>查找父系组件</strong> <a class="header-anchor" href="#查找父系组件" aria-label="Permalink to &quot;**查找父系组件**&quot;">​</a></h3><p>在组件树中层层向上查找指定名称的父组件。</p><h3 id="兼容性-4" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-4" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-4" tabindex="-1">属性 <a class="header-anchor" href="#属性-4" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>instance</td><td><code>ComponentPublicInstance</code></td><td>是</td><td>-</td><td>当前组件实例。</td></tr><tr><td>parentNames</td><td><code>string[]</code></td><td>是</td><td>-</td><td>需要查找的父系组件的名称。</td></tr></tbody></table><h3 id="返回值-4" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-4" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td><code>ComponentPublicInstance</code></td><td>否</td><td>如果找到对应的父系组件，则返回该组件的实例；如果没有找到，则返回 null。</td></tr></tbody></table><hr><h1 id="snu-findbrother" tabindex="-1">snu.findBrother() <a class="header-anchor" href="#snu-findbrother" aria-label="Permalink to &quot;snu.findBrother()&quot;">​</a></h1><h3 id="查找兄弟组件" tabindex="-1"><strong>查找兄弟组件</strong> <a class="header-anchor" href="#查找兄弟组件" aria-label="Permalink to &quot;**查找兄弟组件**&quot;">​</a></h3><p>在组件树中查找指定名称的兄弟组件。</p><h3 id="兼容性-5" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性-5" aria-label="Permalink to &quot;兼容性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Web</th><th>Android</th></tr></thead><tbody><tr><td>√</td><td>√</td></tr></tbody></table><h3 id="属性-5" tabindex="-1">属性 <a class="header-anchor" href="#属性-5" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>instance</td><td><code>ComponentPublicInstance</code></td><td>是</td><td>-</td><td>当前组件实例。</td></tr><tr><td>brotherNames</td><td><code>string[]</code></td><td>是</td><td>-</td><td>需要查找的兄弟组件名称数组。</td></tr></tbody></table><h3 id="返回值-5" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-5" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>必备</th><th>描述</th></tr></thead><tbody><tr><td><code>ComponentPublicInstance</code></td><td>否</td><td>如果找到对应的兄弟组件，则返回该组件的实例；如果没有找到，则返回 <code>null</code>。</td></tr></tbody></table><hr>',60),o=[r];function n(i,l,b,s,u,c){return d(),a("div",null,o)}const m=t(h,[["render",n]]);export{q as __pageData,m as default};
